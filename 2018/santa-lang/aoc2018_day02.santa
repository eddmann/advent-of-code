input: read("aoc://2018/2")

part_one: {
  let counter = reduce(
    |frequencies, value| update(value, 0, _ + 1, frequencies),
    #{}
  );

  input
    |> lines
    |> reduce(
      |[twos, threes], id| {
        let frequencies = counter(id);
        let two = if frequencies `contains` 2 { 1 } else { 0 };
        let three = if frequencies `contains` 3 { 1 } else { 0 };
        [twos + two, threes + three];
      },
      [0, 0]
    )
    |> |[a, b]| a * b
}

part_two: {
  let checksum = |cmp, pair| reduce(
    |acc, [x, y]| if cmp(x, y) { acc + x } else { acc }, 
    "", 
    zip(..pair)
  );

  input
    |> lines
    |> combinations(2)
    |> find(|pair| checksum(!=, pair) |> size == 1)
    |> checksum(==);
}

test: {
  input: "abcdef\nbababc\nabbcde\nabcccd\naabcdd\nabcdee\nababab"
  part_one: 12
}

test: {
  input: "abcde\nfghij\nklmno\npqrst\nfguij\naxcye\nwvxyz"
  part_two: "fgij"
}
